<!--@cart_products = nil-->
<!--@cart_data = cart-->

<section class="h-100 gradient-custom">
  <div class="container py-2">
    <div class="row d-flex justify-content-center my-4">
      <div class="col-md-8">
        <%= render partial: 'cart_items', locals: { cart_products: @cart_products, cart_data: @cart_data } %>
        <div class="card mb-4">
          <div class="card-body">
            <p><strong>Expected shipping delivery</strong></p>
            <p class="mb-0">12.10.2020 - 14.10.2020</p>
          </div>
        </div>
        <div class="card mb-4 mb-lg-0">
          <div class="card-body">
            <p><strong>We accept</strong></p>
            <img class="me-2" width="45px"
                 src="https://mdbcdn.b-cdn.net/wp-content/plugins/woocommerce-gateway-stripe/assets/images/visa.svg"
                 alt="Visa" />
            <img class="me-2" width="45px"
                 src="https://mdbcdn.b-cdn.net/wp-content/plugins/woocommerce-gateway-stripe/assets/images/amex.svg"
                 alt="American Express" />
            <img class="me-2" width="45px"
                 src="https://mdbcdn.b-cdn.net/wp-content/plugins/woocommerce-gateway-stripe/assets/images/mastercard.svg"
                 alt="Mastercard" />

          </div>
        </div>
      </div>

      <div class="col-md-4">
        <div class="card mb-4">
          <div class="card-header py-3">
            <h5 class="mb-0">Summary</h5>
          </div>
          <div class="card-body">
            <%= render partial: 'cart_summary', locals: { cart_products: @cart_products, cart_data: @cart_data } %>
            <%#= button_to payments_checkout_path, method: :post, form: { id: "checkout-form", data: { turbo: false } },  class: "btn btn-primary btn-lg btn-block" do %>
<!-- Checkout -->
            <%# end %>

            <button class="btn btn-primary btn-lg btn-block" id="checkout-form" data-turbo=false type="submit">
              Checkout
            </button>
          </div>
        </div>
      </div>
      <section class=>
        <div class="container my-5">
          <!-- Modal -->
          <div class="modal fade" id="paymentModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
              <div class="modal-content">
                <div class="modal-header">
                  <h5 class="modal-title" id="exampleModalLabel">Payment</h5>
                  <button type="button" class="btn-close" data-mdb-ripple-init data-mdb-dismiss="modal"
                          aria-label="Close"></button>
                </div>
                <form action="/payments" method="post" id="new_payment">
                  <div class="modal-body">
                      <input type="hidden" name="authenticity_token" value="<%= form_authenticity_token %>">
                      <input type="hidden" name="payments[stripe_payment_id]" id="payment_id">
                      <input type="hidden" name="payments[price]" id="price">

                      <div class="field">
                        <div id="card"></div>
                      </div>
                  </div>
                  <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-mdb-ripple-init
                            data-mdb-dismiss="modal">Close</button>
  <!--                  <button type="button" class="btn btn-primary" data-mdb-ripple-init>Save changes</button>-->
                    <input type="submit" id="pay_btn" class="btn btn-primary" data-mdb-ripple-init value="">
                  </div>
                </form>
              </div>
            </div>
          </div>
        </div>
      </section>

      <%= content_for :custom_script_after do %>
        <script type=text/javascript >

          var amount = 0;

          // initialize modal
          var myModal = new mdb.Modal(document.getElementById('paymentModal'));

          const csrfToken = document.querySelector('[name="csrf-token"]').getAttribute('content');

          $(document).ready(function() {
            $("body").on('click', '#checkout-form', function(event) {
              event.preventDefault();

              $.ajax({
                url: "<%= checkouts_check_path %>",
                type: 'POST',
                dataType: 'json',
                headers: {
                  'X-CSRF-Token': csrfToken
                },
                data: {}
              }).done(function(ret) {
                 //myModal.show();
                const message = ret["message"];

                if(message == 'sign_in')
                {
                  alert('Please Sign in First !');
                }else if(message == 'shipping_address')
                {
                  alert('Please add shipping address in your profile first !');
                }
                else
                {
                  amount = document.querySelector('#amount').innerText.substring(1);
                  document.querySelector('#price').value = amount;
                  document.querySelector('#pay_btn').value = 'Pay $'+amount;
                  myModal.show();
                }
                 //console.log('ajax done');
              });
            });
          });
        </script>

        <script charset="utf-8">
          var stripe = Stripe('<%= Rails.configuration.stripe[:publishable_key] %>');
          // load the fonts in
          var fonts = [{
            cssSrc: "https://fonts.googleapis.com/css?family=Karla",
          }];
          // styles for the stripe inputs
          var styles = {
            base: {
              iconColor: "#cccccc",
              color: "#000000",
              fontFamily: "MonumentGroteskTrial-Regular",
              fontSize: "16px",

              "::placeholder": {
                color: "#ccc"
              },
              ":-webkit-autofill": {
                color: "#ccc"
              }
            },
            invalid: {
              iconColor: "#FFC7EE",
              color: "#A31621"
            }
          }

          var elements = stripe.elements();
          var cardElement = elements.create('card', {style: styles});
          cardElement.mount('#card');

          const form = document.querySelector('#new_payment');
          form.addEventListener('submit', function(e) {
            e.preventDefault();
            // Step 1: POST request to create payment intent
            fetch('/payment_intents', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify({
                authenticity_token: '<%= form_authenticity_token %>',
                amount: amount
              }),
            })
              .then((response) => response.json())
              .then((paymentIntent) => {
                // Step 2: Create payment method and confirm payment intent.
                stripe.confirmCardPayment(
                  paymentIntent.client_secret, {
                    payment_method: {
                      card: cardElement
                    }
                  }
                ).then((resp) => {
                  if(resp.error) {
                    alert(resp.error.message);
                  } else {
                    // Step 3: Embed payment ID in form
                    const paymentIdInput = document.querySelector('#payment_id');
                    paymentIdInput.value = paymentIntent.id;
                    form.submit();
                  }
                })
              })
              .catch((error) => {
                console.error('Error:', error);
              });
          });
        </script>
      <% end %>
    </div>
  </div>
</section>